#summary Page for listing off use cases for our project.

= Use Cases =
Use cases will be driven by our [Features]

==Use Case Guidelines==

===Required===
  * Name
  * ID
  * Actors
  * Pre-Conditions
  * Sequence of Actions (numbered)
  * Post-Conditions

===Optional===
  * Stakeholders
  * Special Requirements
  * Technology and Data Variations
  * Frequency
  * Open Issues

==Current Cases==

(put the use cases here)
  * Use Case: Simple File Rename
    * ID: UC1
    * Actors:
      * User: wants to easily rename many files at once
    * Precondition:
      * Program is open
      * User has a bunch of inconsistently named target files
    * Sequence of Actions:
      # User selects "Browse"
      # System displays a Browse dialog window
      # User selects the folder that contains the target files
      # System updates display to show the files with their original names
      # User enters text for the "Match" within the target filenames
      # System begins to update display to show the new names of the files
      # User enters text for the "Replacement" within the target filenames
      # UI updates display to show new names that have "Match" replaced with "Replacement"
      # User selects "Apply"
      # System renames each affected file, and displays this change.
    * Post Condition:
      * Files are named consistently, according to the user's input
      * Happy user


  * Use Case: Invalid Regular Expression
    * ID: UC2
    * Actors:
      * User: is attempting to use regular expressions for the file renaming process
    * Precondition:
      * Program is open
      * User has already browsed to a directory containing target files
    * Sequence of Actions:
      # User enters an invalid regular expression for the "Match" on target filenames
      # System identifies the expression as invalid; Updates display with an error notification
    * Post Condition
      * Selecting "Apply" will not cause anything to happen
      * The place where the user can enter "Match" text will be marked up to make the error obvious

Use Case: Music Renaming
  * ID: UC3
  * Actors:
    * User: wants to rename files according to music metadata tags
    * Tag Database: online database that can return metadata given a particular song
  * Preconditions:
    * User has an active internet connection
    * User has browsed to a directory containing music files
  * Sequence of Actions:
    # User selects a metadata option to add (Title, Genre, etc.. also plain text), to create a renaming rule for the music files.
      * For plain text, the user will be able to enter the actual text
    # User selects "Add"
    # UI updates to show the added option
    # User repeats from step 1 until satisfied
    # User may modify the selected options:
      * User selects one of the options he/she added earlier
      * User selects "Up" or "Down" to change the ordering of the options
      * User may select "Remove" to remove an option
    # User selects "Apply"
    # System renames the music files according to the selected options, updates display.
  * Post Condition
    # Music files are now all named in accordance with the renaming rule created by the user